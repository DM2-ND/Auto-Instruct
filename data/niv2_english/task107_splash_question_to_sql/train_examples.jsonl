{"id": "task107-528b418020234a759591db151c26b07c", "input": "Find all the locations whose names contain the word \"film\".", "target": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\""}
{"id": "task107-76fa8d73935348ed8ced4c97a9947555", "input": "HOw many engineers are older than 30?", "target": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'"}
{"id": "task107-9ea062d7d77f4300916fd0140e40ad23", "input": "What is the best rank of losers across all matches?", "target": "SELECT min(loser_rank) FROM matches"}
{"id": "task107-44801a8cf5ca40a19f483f878295b30e", "input": "How many different projects are there?", "target": "SELECT count(DISTINCT name) FROM projects"}
{"id": "task107-a302376129854a0085db96a3f9ebc827", "input": "What is id of the city that hosted events in the most recent year?", "target": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1"}
{"id": "task107-2b38b046eccb4fb983fd770296aa3daa", "input": "What is the id of the reviewer whose name includes the word \"Mike\"?", "target": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\""}
{"id": "task107-305286ac0ba54086bda4e42d465a6937", "input": "Show order ids and the total quantity in each order.", "target": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id"}
{"id": "task107-89e6882b8bc146ab9404f6a273f4eb61", "input": "How many camera lenses are not used in taking any photos?", "target": "SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )"}
{"id": "task107-72ef097aacc34a6597f5a29bb5b6e0d5", "input": "Give the names and scores of wines made from white grapes.", "target": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\""}
{"id": "task107-4e0269528d0342a89e1c647148706704", "input": "What are the department names and how many employees work in each of them?", "target": "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name"}
{"id": "task107-06f2e95b94ce4b3bb6a0272e92d241f3", "input": "Who is the youngest employee in the company? List employee's first and last name.", "target": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1"}
{"id": "task107-a19a66d54d50494885e74313220ca82b", "input": "Find the manager name and district of the shop whose number of products is the largest.", "target": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"}
{"id": "task107-5ee04bc3e2a94b0f9b65d0ef5b63cd45", "input": "What is the label with the most albums?", "target": "SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1"}
{"id": "task107-809ee26776c647beba0a130962479f70", "input": "Which program was launched most recently? Return the program name.", "target": "SELECT name FROM program ORDER BY launch DESC LIMIT 1"}
{"id": "task107-77c1a0e2f6e342b793f2ee3ee1f3bd57", "input": "How many different series and contents are listed in the TV Channel table?", "target": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel"}
{"id": "task107-05cac63af19d4f21ab9147bf1b5bca4c", "input": "Count the number of distinct channel owners.", "target": "SELECT count(DISTINCT OWNER) FROM channel"}
{"id": "task107-67a39c57b07d452e9fe053eefae112f8", "input": "Show the names of conductors and the orchestras they have conducted.", "target": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID"}
{"id": "task107-d9db1301ece14edc8112807d4c32714c", "input": "What are the names of wrestlers and the elimination moves?", "target": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID"}
{"id": "task107-3d4679d175c848dfaffed69b3479c01f", "input": "Show the ids of all the faculty members who participate in an activity and advise a student.", "target": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student"}
{"id": "task107-d7ad84e56b2e48e78dcf4000f460afa2", "input": "What is the total number of enrollment of schools that do not have any goalie player?", "target": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")"}
{"id": "task107-aeba3ef5707543ff9266fe1ea362e05e", "input": "Which makers designed more than 3 car models? List full name and the id.", "target": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3"}
{"id": "task107-7c6919093ed84c25af6e56fbfbd60a46", "input": "For each manufacturer name, what are the names and prices of their most expensive product?", "target": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"}
{"id": "task107-e3eccee8e0534d77a66aa8512036b692", "input": "What are the clean and jerk score of the body builder with the highest total score?", "target": "SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1"}
{"id": "task107-a1fab99480424a3d92951a537ad90a28", "input": "Which buildings have apartments that have more than two bathrooms? Give me the addresses of the buildings.", "target": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2"}
{"id": "task107-c11c61f90e3449c8ac0caca4a28b1655", "input": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.", "target": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1"}
{"id": "task107-0853d4cee5684d2b99006dee77b8e651", "input": "For all directors who directed more than one movie, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title.", "target": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title"}
{"id": "task107-28bd8ddf1a8040d28a097c9f27acaaf2", "input": "Which colleges does each player with a name that starts with the letter D  who tried out go to?", "target": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%'"}
{"id": "task107-733b0fcdc24e4fb18ef3b02e89b4ccb5", "input": "What are the room name and base price of the room with the lowest base price?", "target": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1"}
{"id": "task107-1d922a13e8824d3f9589844d5d869bd4", "input": "List all the product names with the color description \"white\".", "target": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\""}
{"id": "task107-671d726e79804c0e867c3606f3dbd264", "input": "What are the names and revenues of the companies with the highest revenues in each headquarter city?", "target": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter"}
{"id": "task107-ecb7af1793694214be10825398693304", "input": "What are the mission codes, fates, and names of the ships involved?", "target": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID"}
{"id": "task107-54280713e4864058aafd73535be979e6", "input": "Find the number of scientists involved for the projects that require more than 300 hours.", "target": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name"}
{"id": "task107-b60ca4f701b94b23ac89ab892930e5fb", "input": "What are the names of musicals who have no actors?", "target": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)"}
{"id": "task107-2ddf2bd5394e4d37bc3e0b58830f1898", "input": "Show all artist names and the number of exhibitions for each artist.", "target": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id"}
{"id": "task107-808c64c83df54baf8cb0076b511fd2f2", "input": "How many musicians play in the song \"Flash\"?", "target": "SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  \"Flash\""}
{"id": "task107-1528e846394f4ee89599309aaa76bfc6", "input": "Find the title and star rating of the movie that got the least rating star for each reviewer.", "target": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID"}
{"id": "task107-86c28bfb6df047348963bf011b6fe719", "input": "For each zip code, return the average mean temperature of August there.", "target": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code"}
{"id": "task107-bbf1a58935714e98a0d0daa1fc39a2dc", "input": "Give me ids for all the trip that took place in a zip code area with average mean temperature above 60.", "target": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60"}
{"id": "task107-10ccef94cf884782b130de81cf3d26f4", "input": "What are each document's location code, and starting date and ending data in that location?", "target": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations"}
{"id": "task107-39e4bd48f4614f28ac722364a71eeaa8", "input": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "target": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')"}
{"id": "task107-f49be1cfb2d749c2a7e0af671b7985e3", "input": "Which schools have more than 1 player? Give me the school locations.", "target": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1"}
{"id": "task107-07ed59e184bb4a78b7c7436ae8aea329", "input": "For each station, return its longitude and the average duration of trips that started from the station.", "target": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id"}
{"id": "task107-c316e210a23847419c564be0c8c537fd", "input": "What is the name of all the people who are older than at least one engineer? Order them by age.", "target": "SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age"}
{"id": "task107-eba931034dad4dc0b9886b497b083c2b", "input": "List the name of albums that are released by aritist whose name has 'Led'", "target": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'"}
{"id": "task107-91d9a6dd4be5491188aa0ca3dfac0aef", "input": "Find the name of persons who are friends with Alice for the shortest years.", "target": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')"}
{"id": "task107-d00cdbde7d444dbbba2567808cc5df3b", "input": "Which person whose friends have the oldest average age?", "target": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1"}
{"id": "task107-f9af8e1b4c734bf4b7a4c30a8705ecb0", "input": "Find the most prominent max page size among all the products.", "target": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1"}
{"id": "task107-bc954b7e44d143adae83254aeb339ee9", "input": "How many proteins are associated with an institution founded after 1880 or an institution with type \"Private\"?", "target": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1880 OR T1.type  =  'Private'"}
{"id": "task107-d52610a23cf44b32beb47e223f6d5be5", "input": "What is the mean longitude for all stations that have never had more than 10 bikes available?", "target": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)"}
{"id": "task107-196331ba6c234759bb7738676798420c", "input": "What are the names of studios that have produced films with both Nicholas Meyer and Walter Hill?", "target": "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\""}
{"id": "task107-6a0ceb1f239d42e7ad0472290d51f810", "input": "What is the total number of ratings that has more than 3 stars?", "target": "SELECT count(*) FROM Rating WHERE stars  >  3"}
{"id": "task107-b4132753558944468de6b42f4da5d57f", "input": "Which delegates are from counties with population smaller than 100000?", "target": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"}
{"id": "task107-50a757910e404b28a6dd9b4ae2ed377a", "input": "Show the names of trains and locations of railways they are in.", "target": "SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID"}
{"id": "task107-8444ac02da504f7183a04525a9087b14", "input": "What is the total horses record for each farm, sorted ascending?", "target": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC"}
{"id": "task107-f4d09b5f08344e8589a0fe8cb9bedab7", "input": "What is the most commmon hometowns for teachers?", "target": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1"}
{"id": "task107-eab7c9f8dcb04ec0915b0011ebad2312", "input": "How old is the youngest person for each job?", "target": "SELECT min(age) ,  job FROM Person GROUP BY job"}
{"id": "task107-02fdd5cc470b4242bb230c146e2056b2", "input": "Which allergy has most number of students affected?", "target": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1"}
{"id": "task107-4f3c266350ab4c93ae9e49443944ce45", "input": "Show institution names along with the number of proteins for each institution.", "target": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id"}
{"id": "task107-b61bb499d118408c835ee99a198b020a", "input": "What are the codes of countries where Spanish is spoken by the largest percentage of people?", "target": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode"}
{"id": "task107-728914bd2ced442aace663e50c821b5b", "input": "Find the ids of the departments where any manager is managing 4 or more employees.", "target": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"}
{"id": "task107-43b955e5744f40d7a2c7dadf79c366d2", "input": "Which city is the most frequent source airport?", "target": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"}
{"id": "task107-bc6899d012e6458c9242aedc50dbd1b2", "input": "What are the names of customers who do not have any policies?", "target": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id"}
{"id": "task107-7624d74861d54405b910ac2c219fb2ae", "input": "Return all reviewer names and movie names together in a single list.", "target": "SELECT name FROM Reviewer UNION SELECT title FROM Movie"}
{"id": "task107-e835178d6dc942fca79b50a035c6ead6", "input": "What are the main industries of the companies without gas stations and what are the companies?", "target": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)"}
{"id": "task107-2f95c6716f8e4c1ea6b4a91ae3c21bba", "input": "For the problem with id 10, return the ids and dates of its problem logs.", "target": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10"}
{"id": "task107-e14b7759cf6b44ca8b589292a7f60502", "input": "List the first and last names of all distinct staff members who are assigned to the problem whose id is 1.", "target": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1"}
{"id": "task107-82af288e6abc4a23990569f34ce36f95", "input": "Find the name of instructor who is the advisor of the student who has the highest number of total credits.", "target": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"}
{"id": "task107-7a0644683a654978b995adb39e83e19b", "input": "What are the names of the clients who do not have any booking?", "target": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"}
{"id": "task107-440063f63c344417adfc8c61e1c5f046", "input": "What is the id of the trip that started from the station with the highest dock count?", "target": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1"}
{"id": "task107-3a1043b80ead46cd9d70a2b8aa17c24f", "input": "What are the name of the players who received a card in descending order of the hours of training?", "target": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC"}
{"id": "task107-015c54680e12487091fcdfe09b6bc742", "input": "What are the names of stations that are located in Palo Alto city but have never been the ending point of trips more than 100 times?", "target": "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100"}
{"id": "task107-1681d37c77004715ad8e3f2bfbbebb2b", "input": "For each director, what is the title and score of their most poorly rated movie?", "target": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director"}
{"id": "task107-3f8645b3646c416cb4a639d6266c1b57", "input": "Find the number of users who posted some tweets.", "target": "SELECT count(DISTINCT UID) FROM tweets"}
{"id": "task107-123f7cf62c074f1aa77c00c13590c0dc", "input": "Find the name of students who didn't take any course from Biology department.", "target": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')"}
{"id": "task107-d98da6b39cd74917b01feb4d7a78ecf2", "input": "What are the famous titles of the artist \"Triumfall\"?", "target": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\""}
{"id": "task107-c3e4325f46944a5ebe54cafc9f63f0da", "input": "What are the names of all cartoons directed by Ben Jones?", "target": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\""}
{"id": "task107-74f2b53932634fbcb831256f363eb998", "input": "Count the number of artists who have had volumes.", "target": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"}
{"id": "task107-291eb063ff774d3fbe21a551fe890357", "input": "What are the maximum and minimum number of cows across all farms.", "target": "SELECT max(Cows) ,  min(Cows) FROM farm"}
{"id": "task107-cb7d076e9f8e415c97bb6fa757721468", "input": "How many students participated in tryouts for each college by descennding count?", "target": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC"}
{"id": "task107-390851d105e34b8f9e2d55145bf636e8", "input": "What are the name, origin and owner of each program?", "target": "SELECT name ,  origin ,  OWNER FROM program"}
{"id": "task107-0a1f9e3a9fde4fa0b07fcedae724ab1f", "input": "Find the semester and year which has the least number of student taking any class.", "target": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"}
{"id": "task107-c45354d7db6c4ca684eb54d935ff5b1f", "input": "For each county, find the name of the county and the number of delegates from that county.", "target": "SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id"}
{"id": "task107-f5c0347632584a1482e5a9d86a21788b", "input": "What is all the product data, as well as  each product's manufacturer?", "target": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code"}
{"id": "task107-306ee5d2e6524c96b6338922c388267a", "input": "What is the employee id of the head whose department has the least number of employees?", "target": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1"}
{"id": "task107-d609625b9e7a4249a8078ffa4457b1c1", "input": "What zip codes have a station with a max temperature greater than or equal to 80 and when did it reach that temperature?", "target": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80"}
{"id": "task107-f383c969d73e4e2e938a9ab71092d39e", "input": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted.", "target": "SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name"}
{"id": "task107-9f5956fbaa0b4efdbce684daba9675db", "input": "What are the names of the aircraft that the least people are certified to fly?", "target": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1"}
{"id": "task107-a677748c5219482ab2c94b07b8fc571a", "input": "What is the name of the conductor who has worked the greatest number of years?", "target": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1"}
{"id": "task107-e477cee8e9da47dab89ebae080f15304", "input": "Show the station name and number of trains in each station.", "target": "SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id"}
{"id": "task107-7ec98d127f324626b2fa45a1bfb08a10", "input": "Find the name and rank points of the winner who won the most times.", "target": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1"}
{"id": "task107-08873da4c0c04369b568f70137f62a9a", "input": "What is the name of the event that happened in the most recent year?", "target": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1"}
{"id": "task107-a011b52c6acc48f0a0ae32d606bc1efd", "input": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "target": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'"}
{"id": "task107-c027cdd2d36a4c63adfc2e3c5333dfa8", "input": "Count the number of chip model that do not have wifi.", "target": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'"}
{"id": "task107-8aade7244ef740baa80086361024c91f", "input": "Which party has the largest number of delegates?", "target": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1"}
{"id": "task107-9942af74434945b686cbed3a19647eec", "input": "What language is predominantly spoken in Aruba?", "target": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1"}
{"id": "task107-22d710c592784f938aef0282286f4512", "input": "What are the names of the heads who are born outside the California state?", "target": "SELECT name FROM head WHERE born_state != 'California'"}
{"id": "task107-a73a47178b7a45f58bd3367182d8a257", "input": "What are the names and ranks of the three youngest winners across all matches?", "target": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3"}
{"id": "task107-6ce4bfa77fe241f6a9d59c27b0a26baa", "input": "Which engineers have never visited to maintain the assets? List the engineer first name and last name.", "target": "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)"}
{"id": "task107-6ae53282410e48c2b8bc1f836548ac18", "input": "Return the different statuses of cities, ascending by frequency.", "target": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC"}
{"id": "task107-30c330d0073e4c33a37dfaad090491be", "input": "Find the states where have some college students in tryout.", "target": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName"}
{"id": "task107-5378edc6e6264cd9a46f51f8bba50d6b", "input": "What are all info of students who registered courses but not attended courses?", "target": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"}
{"id": "task107-803009a5c36a494a83842e8fe389dd8b", "input": "What is the id of the shortest trip?", "target": "SELECT id FROM trip ORDER BY duration LIMIT 1"}
{"id": "task107-52c2e79fd5bd411e94b15c215151ef84", "input": "What are all the different start station names for a trip that lasted less than 100?", "target": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100"}
{"id": "task107-8e7912b4d324491f869e0c71381a8428", "input": "What are the population, name and leader of the country with the largest area?", "target": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1"}
{"id": "task107-d503b2c290514132b08a4a64350e2e2d", "input": "What are the names of the workshop groups that have bookings with status code \"stop\"?", "target": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\""}
{"id": "task107-f07eae52000441f38d437124e559fb9e", "input": "How many different courses offered by Physics department?", "target": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'"}
{"id": "task107-6e9096a134494305ae5900ebfbfad92c", "input": "Return the colleges that have players who play the Midfielder position, as well as players who play the Defender position.", "target": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\""}
{"id": "task107-33e8990e20314dc9be9ba81e1c216b8e", "input": "Give the city and country for the Alton airport.", "target": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\""}
{"id": "task107-3d782202dbc04de4bbab68e4e7a3ed73", "input": "What is the alphabetically ordered list of all distinct medications?", "target": "SELECT DISTINCT name FROM medication ORDER BY name"}
{"id": "task107-96700a48a93843499596306230e28ae4", "input": "Find the name and credit score of the customers who have some loans.", "target": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id"}
{"id": "task107-cf96f82f5c7349ffa1b3442025846298", "input": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards?", "target": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\""}
{"id": "task107-200262d37d8e40fda76f523bf652b1b4", "input": "Return the dates of ceremony corresponding to music festivals that had the category \"Best Song\" and result \"Awarded\".", "target": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\""}
{"id": "task107-5524e15b78814a3fa0993bb007d6b045", "input": "Give me the start station and end station for the trips with the three oldest id.", "target": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3"}
{"id": "task107-da7cd2352bc94e05842cdbbc8c5713f6", "input": "List the season, home team, away team of all the games.", "target": "SELECT season ,  home_team ,  away_team FROM game"}
{"id": "task107-c1ff2510a9454d84aa9e62da15ed84da", "input": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?", "target": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'"}
{"id": "task107-40dbf3fbc6b24f609cd2e958f9156a4c", "input": "Show the statuses of roller coasters longer than 3300 or higher than 100.", "target": "SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100"}
{"id": "task107-8e34cfd5cf4843ad8e3341def7902027", "input": "What is the version number and template type code for the template with version number later than 5?", "target": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5"}
{"id": "task107-c448c3e278bd46cda94e0de20fa9fe38", "input": "which course has most number of registered students?", "target": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1"}
{"id": "task107-480cf797c11b4bf3965ff9047b1574ba", "input": "How much does the most expensive charge type costs?", "target": "SELECT max(charge_amount) FROM Charges"}
{"id": "task107-30c36f7059f14526830011f1c90c69f6", "input": "How much does the most recent treatment cost?", "target": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1"}
{"id": "task107-52874d2d43fc42669fe950e2f205884f", "input": "What are the full names and salaries for any employees earning less than 6000?", "target": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"}
{"id": "task107-075aac4f9fc74cb8979b7d11c58c1fd7", "input": "What are the grapes and appelations of each wine?", "target": "SELECT Grape ,  Appelation FROM WINE"}
{"id": "task107-5b3510e73c854fa2a142a4e407c0351f", "input": "Return the names of the 3 countries with the fewest people.", "target": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3"}
{"id": "task107-3297cd5532304d82a7c2529de807c7bb", "input": "Find the phone number of all the customers and staff.", "target": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff"}
{"id": "task107-97f8dea8de3842809a843619a6b9a1bd", "input": "Are the customers holding coupons with amount 500 bad or good?", "target": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500"}
{"id": "task107-0ff0e6938fa948a7a2d17cb580423048", "input": "What are the Asian countries which have a population larger than that of any country in Africa?", "target": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")"}
{"id": "task107-e4b6f5558342470bb599dfa0c1178ba4", "input": "Display the first name, and department number for all employees whose last name is \"McEwen\".", "target": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'"}
{"id": "task107-ba177710aaef4b679cd08e8ca4ee47e6", "input": "Find courses that ran in Fall 2009 and in Spring 2010.", "target": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"id": "task107-d35597374faf4c9394b8c635c4e8237f", "input": "How many countries do not have an roller coaster longer than 3000?", "target": "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )"}
{"id": "task107-b540a77722b14d1cbdcbbd43dba58847", "input": "What are card ids, customer ids, card types, and card numbers for each customer card?", "target": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards"}
{"id": "task107-dcdd16f3098d4dd194cd3027453121fd", "input": "Show the names and main services for train stations that have the top three total number of passengers.", "target": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3"}
{"id": "task107-49f736a820c84afab84a297ce008c167", "input": "List all students' first names and last names who majored in 600.", "target": "SELECT Fname , Lname FROM Student WHERE Major  =  600"}
{"id": "task107-31355f3660f24990b78a555f761a9222", "input": "What are the speeds of the longest roller coaster?", "target": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1"}
{"id": "task107-b1424abf29c74ace92abca5710c8325e", "input": "What are the different album labels listed?", "target": "SELECT DISTINCT label FROM Albums"}
{"id": "task107-3d622e931f5846f19cf07a028d9995f3", "input": "What is the name and capacity for the stadium with the highest average attendance?", "target": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1"}
{"id": "task107-2f3c68fb0f8a4f31af78d3a688c1f6f0", "input": "What are the different names for all songs that have a higher resolution than English songs?", "target": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")"}
{"id": "task107-58ec15cd156c4ec3bac51247eeab6922", "input": "How many universities have a campus fee higher than average?", "target": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)"}
{"id": "task107-5b9edc6deec9408fb24590a3b42debd0", "input": "Show all city with a branch opened in 2001 and a branch with more than 100 membership.", "target": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100"}
{"id": "task107-df103773ced84ad38a4f8d191a9f124a", "input": "Find the name and email of the user followed by the least number of people.", "target": "SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1"}
{"id": "task107-cffcfcf162904f849a28758c1cc1c6f5", "input": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.", "target": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'"}
{"id": "task107-6acf8e1b7a004d0cae3a84e0ab96e3f8", "input": "What are the names of all instructors in the Comp. Sci. department?", "target": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'"}
{"id": "task107-4b420935d3a74bd1b106a0042886a609", "input": "List the distinct payment method codes with the number of orders made", "target": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code"}
{"id": "task107-85bca0253a3e454e8f4617637e8e3bb7", "input": "Give the maximum price and score for wines produced in the appelation St. Helena.", "target": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\""}
{"id": "task107-f03d81d246314494854762cf804992ee", "input": "Which catalog contents have a product stock number that starts from \"2\"? Show the catalog entry names.", "target": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\""}
{"id": "task107-1a6418166a1245debc0ea5a19b9a6d74", "input": "Find the id of the order made most recently.", "target": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1"}
{"id": "task107-67640caf3fa74dbb8cfb054dcc99f5e3", "input": "What are the first names of customers who have not rented any films after '2005-08-23 02:06:01'?", "target": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )"}
{"id": "task107-f64312bc9b514981b94256796ddebd1b", "input": "Find the rooms of faculties with rank professor who live in building NEB.", "target": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\""}
{"id": "task107-61d221743a404d23a9b7339623e6861d", "input": "How many customers have an account?", "target": "SELECT count(DISTINCT customer_id) FROM Accounts"}
{"id": "task107-dbd929187d25451788f5e24e6d8a2877", "input": "What are the full names of faculties with sex M and who live in building NEB?", "target": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\""}
{"id": "task107-cee107f9153d488c866f90e89e610088", "input": "Which last names are both used by customers and by staff?", "target": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff"}
{"id": "task107-148a871a39284e9d8ce7e891bf52ce90", "input": "What are the player name, number of matches, and information source for players who do not suffer from injury of 'Knee problem'?", "target": "SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem'"}
{"id": "task107-6a7923e267d34b1988bec621c0c505fc", "input": "Show the types of schools that have two schools.", "target": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2"}
{"id": "task107-c26ddbe305824a699b50265c01a2b599", "input": "What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?", "target": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"}
